# Generated by Django 2.2.6 on 2019-10-24 10:38

import accounts.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=40, unique=True)),
                ('contact', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number.', regex='^[6-9]\\d{9}$')])),
                ('door_number', models.TextField(max_length=10)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number.', regex='^[6-9]\\d{9}$')])),
                ('is_otp_verified', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='UserDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flat_number', models.TextField(max_length=10)),
                ('recent_photo', models.ImageField(upload_to=accounts.models.user_directory_path)),
                ('id_proof', models.FileField(upload_to=accounts.models.user_directory_path)),
                ('father_name', models.CharField(max_length=50)),
                ('mother_name', models.CharField(max_length=50)),
                ('occupation', models.TextField(max_length=50)),
                ('communication_address', models.TextField(max_length=300)),
                ('communication_address_proof', models.FileField(upload_to=accounts.models.user_directory_path)),
                ('permanent_address', models.TextField(max_length=300)),
                ('permanent_address_proof', models.FileField(upload_to=accounts.models.user_directory_path)),
                ('mobile_number', models.CharField(max_length=10)),
                ('flat_occupancy_status', models.BooleanField(default=False)),
                ('copy_of_sale_deed', models.FileField(upload_to=accounts.models.user_directory_path)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ResetPassword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(error_messages={'unique': 'This token has already been taken.'}, max_length=100, unique=True)),
                ('expires_at', models.DateTimeField()),
                ('is_used', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reset_passwords', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
